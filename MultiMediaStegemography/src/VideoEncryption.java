import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.OutputStream;
import java.math.BigDecimal;
import java.math.BigInteger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;

/*
 * VideoEncryption.java
 *
 * Created on 23 December, 2013, 10:02 PM
 */

/**
 *
 * @author  ASHWIN
 */
public class VideoEncryption extends javax.swing.JFrame {
     InputStream ins;
            int c=0,n=0,j,i=0,m=0,cou=0,tln=0,tn=1,k=0,t=0,coun=0,pb=0,thr=0,h=0,strl=0,hel=0,inr=0;
	String str="",cr="",sam="";
        String address,form=".mp4";
    
    /** Creates new form VideoEncryption */
    public VideoEncryption() {
         setTitle("VIDEO ENCRYPTION");
         // setContentPane(new JLabel(new ImageIcon("STEGO/Tech.jpg")));
         Toolkit toolkit = getToolkit();
            Dimension size = toolkit.getScreenSize();
            setLocation(size.width/3-getWidth()/3,size.height/5-getHeight()/5);
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnBrowse = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtFile = new javax.swing.JTextField();
        txtTarget = new javax.swing.JTextField();
        txtKey = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtMessage = new javax.swing.JTextArea();
        btnEncrypt = new javax.swing.JButton();
        btnMainMenu = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel1.setText("VIDEO ENCRYPTION");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel2.setText("Browse File :");

        btnBrowse.setText("Browse");
        btnBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrowseActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel3.setText("Target File :");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel4.setText("Secret Key :");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel5.setText("Message :");

        txtMessage.setColumns(20);
        txtMessage.setRows(5);
        jScrollPane1.setViewportView(txtMessage);

        btnEncrypt.setText("Encrypt");
        btnEncrypt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEncryptActionPerformed(evt);
            }
        });

        btnMainMenu.setText("Back");
        btnMainMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMainMenuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(12, 12, 12))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtFile, javax.swing.GroupLayout.DEFAULT_SIZE, 228, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 228, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnEncrypt, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                        .addComponent(btnMainMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtKey, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 228, Short.MAX_VALUE)
                    .addComponent(txtTarget, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 228, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBrowse)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(143, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(149, 149, 149))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnBrowse))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTarget, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtKey, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnMainMenu)
                            .addComponent(btnEncrypt)))
                    .addComponent(jLabel5))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnEncryptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEncryptActionPerformed
// TODO add your handling code here:
         if(txtFile.getText().equalsIgnoreCase(txtTarget.getText()))
        {
            JOptionPane.showMessageDialog(this,"Target and source file found same. Please change th value");
        }
        else
        {
                try
	{
	InputStream ints=new FileInputStream(txtFile.getText());
	while(c!=-1)
	{
		c=ints.read();
		if((c==254)||(c==255))
			t++;
		if(t==(strl*8))
		{
			t=0;
			ints.close();
			break;

		}
	}
	ints.close();

	}catch(Exception e){}
	inr=t;
	if(t!=0)
	JOptionPane.showMessageDialog(this,"The Audio file size is too small to encode.Change audio file or reduce the message","ERROR",JOptionPane.ERROR_MESSAGE);
	else
	{
	t=0;
	c=0;
	BigInteger bi1,bi2;
	BigDecimal bd1;
	str=txtKey.getText();
	tln=str.length();
	System.out.println("\n"+"Total No. of characters : "+tln);
	for(int i=0;i<tln;i++)
	{
		tn=(int)str.charAt(i);
		t=t ^ tn;
	}
	t=t>>1;	
	System.out.println("\n"+"Encrypt key :"+t);
	str=txtTarget.getText();
	strl=txtMessage.getText().length();
	int leng=str.length();
	StringBuffer sbr=new StringBuffer(str);
	form=form.toLowerCase();
	if(str.endsWith(""))
	{}
	else if(str.endsWith("mp4")||str.endsWith("flv")||str.endsWith("avi")||str.endsWith("3gp"))
	{
		if(str.endsWith(form)){}
		else
		{
			form="."+form;
			sbr.append(form);
			sbr.replace(leng-4,leng,form);
			str=sbr.toString();
			txtTarget.setText(str);
		}
	}
	else
	{
		form="."+form;
		sbr.append(form);
		str=sbr.toString();
		txtTarget.setText(str);
	}

	int a;
	cou=0;
	k=0;
a=JOptionPane.showConfirmDialog(this,"Do u Want To Continue With The Following Information ?","CONFIRM",JOptionPane.YES_NO_OPTION);
	if(a==0)
	{
	
	try
	{
	
	ins=new FileInputStream(txtFile.getText());
	OutputStream outs=new FileOutputStream(txtTarget.getText());
	
	cr=txtMessage.getText();
	tln=cr.length();
				
do
{
            while(tln!=0)
	{
		int as=(int)cr.charAt(cou);
		System.out.println("\n"+"BEFORE ENCRYPTION : "+as);
		as=as+t;
		System.out.println("\n"+"AFTER ENCRYPTION : "+as);
		BigDecimal bc=new BigDecimal(as);
		BigInteger bi=bc.toBigInteger();
		String bn=bi.toString(2);
		coun=8-(bn.length());
		while(coun!=0)
		{
			bn="0"+""+bn;
			coun--;
		}
		
		System.out.println(bn);
	
		tn=bn.length()-1;
			inr=0;		
		do	
		{
			c=ins.read();
			inr++;
			//progressBar.setValue(inr);
			
			if((c==254)||(c==255))
			{
				
					m=0;
					BigDecimal bd=new BigDecimal(c);
				        BigInteger Bn=bd.toBigInteger();
					String slen=Bn.toString(2);
					System.out.println("\n"+c);
					System.out.println("BIT PATTERN BEFORE ENCODING : "+slen);
					StringBuffer sb=new StringBuffer(slen);
					sb.deleteCharAt(sb.length()-1);
					str=sb+""+bn.charAt(tn);
					System.out.println("BIT PATTERN AFTER ENCODING:"+str);
					int len=str.length()-1;
					
					for(i=len;i>=0;i--)
					{
						k=k+1;
						Character cs=new Character(str.charAt(i));
						String sr=cs.toString();
						n=Integer.parseInt(sr);
						for(j=0;j<k;j++)
						{
							if(j!=0)
								n=n*2;
						}
			
						m=m+n;
					}
				
				
				outs.write(m);
				
				tn=tn-1;
				k=0;
				
			}
			
			else
			outs.write(c);
			
		            
		}while(tn>=0);
		
		tln=tln-1;
		cou=cou+1;
	}	
		
		c=ins.read();
		inr++;
//		progressBar.setValue(inr);
		if((c==254)||(c==255))
		{
		if(coun!=8)
		{
		outs.write(255);
		coun++;
		}
		else
		outs.write(c);
		}
		else
		outs.write(c);
			
	
		
}while(c!=-1);

ins.close();
outs.close();

JOptionPane.showMessageDialog(this,"The Message is successfully Encoded in the File","INFORM",JOptionPane.INFORMATION_MESSAGE);

}
catch(Exception e){
JOptionPane.showMessageDialog(this,e,"ERROR",JOptionPane.ERROR_MESSAGE);
}
        }
        }
        }                                        

    }//GEN-LAST:event_btnEncryptActionPerformed

    private void btnBrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrowseActionPerformed
// TODO add your handling code here:
          JFileChooser filechooser=new JFileChooser(JFileChooser.SELECTED_FILES_CHANGED_PROPERTY);
	File f=new File("\\Sample_Audios\\");
	filechooser.setCurrentDirectory(f);
	filechooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
	//filechooser.setFileFilter(new filter());
	String se="";
	int r=filechooser.showOpenDialog(this);
	File fc=filechooser.getCurrentDirectory();
				
	File tempfilename=filechooser.getSelectedFile(); 
	
      	if(r==JFileChooser.CANCEL_OPTION)
	       JOptionPane.showMessageDialog(this,"File Not Selected","Error",JOptionPane.ERROR_MESSAGE);	
      	else
        		se=""+fc+"\\"+tempfilename.getName();
	int ind=se.indexOf('\\',3);
	
	if(ind==3)
	{
	StringBuffer sbu= new StringBuffer(se);
	sbu.deleteCharAt(ind);
	se=sbu.toString();
	}
		
	txtFile.setText(se);
        txtTarget.setText(se);
    
    }//GEN-LAST:event_btnBrowseActionPerformed

    private void btnMainMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMainMenuActionPerformed
// TODO add your handling code here:
        new MainPage().show();
        this.hide();
    }//GEN-LAST:event_btnMainMenuActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VideoEncryption().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBrowse;
    private javax.swing.JButton btnEncrypt;
    private javax.swing.JButton btnMainMenu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtFile;
    private javax.swing.JTextField txtKey;
    private javax.swing.JTextArea txtMessage;
    private javax.swing.JTextField txtTarget;
    // End of variables declaration//GEN-END:variables
    
}
